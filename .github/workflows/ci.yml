name: publish
on:
  push:
    branches:
      - 'main'
  pull_request:
    branches:
      - '*'

env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
  DOTNET_NOLOGO: true
  NuGetDirectory: ${{ github.workspace}}/nuget

defaults:
  run:
    shell: pwsh

jobs:
  create_nuget:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
    - run: dotnet run --project src/ListDotNetTypes/ListDotNetTypes.csproj -- src/Meziantou.Analyzer/Resources/
    - run: |
        $(Invoke-WebRequest "https://www.nuget.org/api/v2/package/Meziantou.Analyzer/").BaseResponse.RequestMessage.RequestUri -match "meziantou\.analyzer\.1\.0\.([0-9]+).nupkg$"
        $NewVersion = "1.0.$([int]$Matches.1 + 1)"
        Write-Host "New version: $NewVersion"
        Write-Host "::set-output name=package_version::$NewVersion"
      name: Compute version
      id: compute-version
    - run: dotnet pack --configuration Release /p:PackageVersion=${{ steps.compute-version.outputs.package_version }} /bl
    - uses: actions/upload-artifact@v2
      with:
        name: nuget
        if-no-files-found: error
        retention-days: 3
        path: '**/*.nupkg'

  build_and_test:
    runs-on: ${{ matrix.runs-on }}
    env:
      TestResultsDirectory: ${{ github.workspace}}/TestResults
    strategy:
      matrix:
        runs-on: [ ubuntu-20.04, windows-2019 ]
        configuration: [ Debug, Release ]
        roslyn-version: [ 'minimal', 'stable', 'preview' ]
      fail-fast: false
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core (global.json)
      uses: actions/setup-dotnet@v1
    - name: Setup .NET Core (3.1)
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '3.1.x'
    - run: dotnet test --configuration ${{ matrix.configuration }} --logger trx --results-directory "${{ env.TestResultsDirectory }}" /p:WarningsAsErrors=true /p:RoslynVersion=${{ matrix.roslyn-version}}
      name: Run tests
    - uses: actions/upload-artifact@v2
      if: always()
      with:
        name: test-results-${{ matrix.runs-on }}-${{ matrix.configuration }}
        if-no-files-found: error
        retention-days: 3
        path: ${{ env.TestResultsDirectory }}/*.trx

  deploy:
    runs-on: 'ubuntu-20.04'
    needs: [ create_nuget, build_and_test ]
    steps:
    - uses: actions/download-artifact@v2
      with:
        name: nuget
        path: ${{ env.NuGetDirectory }}
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
    - run: |
        Write-Host "Current ref: $env:GITHUB_REF"
        Write-Host "Searching nupkg in folder: ${{ env.NuGetDirectory }}"
        $files = Get-ChildItem "${{ env.NuGetDirectory }}/*" -Recurse -Include *.nupkg
        foreach($file in $files) {
            Write-Host "Pushing NuGet package: $($file.FullName)"
            if ($env:GITHUB_REF -eq 'refs/heads/main')
            {
              & dotnet nuget push "$($file.FullName)" --api-key "$env:NuGetApiKey" --source https://api.nuget.org/v3/index.json --force-english-output --skip-duplicate
            }
            else
            {
              Write-Host "Not on the default branch => Do not push"
            }
        }
      name: Publish NuGet packages
      if: always()
      env:
        NuGetApiKey: ${{ secrets.NuGetApiKey }}
